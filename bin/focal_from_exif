#!/usr/bin/env python
import os.path, sys
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

import os, sys
from labmv import dataset
import json
from subprocess import check_output


def usage():
    print 'USAGE: %s data_set_path' % sys.argv[0]
    sys.exit(0)
    

if len(sys.argv) > 1:
    path = sys.argv[1]
else:
    usage()


data = dataset.DataSet(path)
images = data.images()

for image in images:
    print 'Extracting focal lengths for image', image

    exif_string = check_output(['jhead', data.image_file(image)])
    exif = {}
    for line in exif_string.splitlines():
        words = line.split(':', 1)
        if len(words) == 2:
            exif[words[0].strip()] = words[1].strip()

    size = exif['Resolution'].split('x')
    width, height = [int(i) for i in size]

    if '(35mm equivalent:' in exif['Focal length']:        
        focal_35 = float(exif['Focal length'].split('(35mm equivalent:')[1].split('mm')[0])
        focal_ratio = focal_35 / 36.0 # 35mm film produces 36x24mm pictures.
    else:
        if 'CCD width' in exif:
            sensor_width = float(exif['CCD width'].strip('mm'))
        elif exif['Camera model'] == 'Nexus 5':
            sensor_width = 4.54
        focal = float(exif['Focal length'].split()[0].strip('mm'))
        focal_ratio = focal / sensor_width
        focal_35 = 36.0 * focal_ratio

    d = {
            'width': width,
            'height': height,
            'focal_ratio': focal_ratio,
            'focal_35mm_equiv': focal_35,
        }

    with open(data.exif_file(image), 'w') as fout:
        fout.write(json.dumps(d, indent=4))
